import sys

n = int(sys.stdin.readline())

# 다이나믹 프로그래밍(동적 계획법)은 상향식과 하향식으로 나뉨
# 상향식은 제일 작은 인덱스의 수부터 목표하는 값까지
# 하향식은 맨 위의 값에서 재귀로 제일 작은 인덱스까지
dp = [0] * (n + 1)

# 메모제이션을 통해 처음부터 모든 경우의 수를 고려해 특정 자연수의 답을 구함
# 3 -> 1, 9 -> 3 -> 1, 10 -> 9 -> 3 -> 1 이런 식으로 이전의 결과를 사용
for i in range(2, n + 1):
    dp[i] = dp[i - 1] + 1
    if i % 2 == 0:
        dp[i] = min(dp[i], dp[i // 2] + 1)
    if i % 3 == 0:
        dp[i] = min(dp[i], dp[i // 3] + 1)

print(dp[n])